% Constants
nBlock = 5;
mean_ROIs = [];
max_ROIs = [];
DataMat = [];
info_parts= { 
{'CamilleG'}
{'CarolaneD'}
{'CarolineS'}
{'EmilieR'}
{'GuillaumeB'}
{'LaurenceC'}
{'MarietheQ'}
{'MelanieP'}
{'SVT'}
{'YanniM'}
{'Ziad'}
};
nSubs = length(info_parts);
sizex = 497;
%%
for task=1
tasks_folders={'emotion','gender'}
task_str=tasks_folders{task};

% load ROI
load('/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/interestregions.mat')

% Load CI, example % Bubbles_SSVEP_CarolaneD_emotion_4.mat
%path_data = fullfile('/Users/labogosselin/Desktop/RESULTS_BUBBLES_SSVEP/bubbles_31January2019/');
if task==1
path_data='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/emotion/raw_data/';
res_path='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/emotion/emotion_CIs';
else
path_data='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/gender/raw_data/';
res_path='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/gender/gender_CIs';
end


for subject = 1%:nSubs
    %initialize 
    CIs_sub = zeros(sizex);
    name=info_parts{subject}{1};    
    filename = sprintf('CI_%s_%s', name,task_str);
    blcks=1:5;
 
    CIs_sub = quickCI_BubblesSSVEP(path_data,name, task_str,blcks); 
        
    %CIs_sub=CIs_sub/sqrt(nBlock);
    
    % Link CI and ROIs
    masks{1}  = logical(mask(:,:,1));
    masks{2} = logical(mask(:,:,2));
    masks{3} = logical(mask(:,:,3));
    masks{4} = ~(masks{1}+masks{2}+masks{3});

    % Calculate de mean and max
    mean_ROIs = [nanmean(CIs_sub(masks{1})), nanmean(CIs_sub(masks{2})), nanmean(CIs_sub(masks{3}))];
    max_ROIs = [max(CIs_sub(masks{1})), max(CIs_sub(masks{2})), max(CIs_sub(masks{3}))];
    
    
   figure, imagesc(CIs_sub),title(sprintf('subject %s',name)),colorbar,colormap(jet)
  % save(fullfile(res_path,filename), 'CIs_sub', 'mean_ROIs', 'max_ROIs','masks')%,'mACC','mRT');
   %save(, 'CIs_sub', 'mean_ROIs', 'max_ROIs','masks')%,'mACC','mRT');
end
end
%%
nBlocks=5;
sigma=20;
subjectN=0;
task=1;
tasks_folders={'emotion','gender'};
task_str=tasks_folders{task};
addpath('/home/adf/faghelss/Documents/TOOLBOXES/Stat4CiToolbox/Stat4CiToolbox')
%load('simulated_LeyeUser.mat','cid')



clear CI_all
for subject=1:nSubs
subjectN=subjectN+1;

name=info_parts{subject}{1};    
for block=1:nBlocks

clear cid q

load(strcat('Bubbles_SSVEP_',name,'_',task_str,'_',num2str(block),'.mat'))


X_all=[];
y_all=[];

nTrials=200;

spaceSize=497;
X           = zeros(nTrials, spaceSize^2);
y           = zeros(1, nTrials);

rng(cid.seed.Seed,cid.seed.Type)

% % this is required for this specific experiment; the random number
% generator won't be "at the right place" otherwise.
randperm(264);
rand(1,200)>.5; % 0 = no flip, 1 = right-left flip
[tGuess,minBulle,surfaceBulle]= bubbles_questGuest(cid.data(5,1),spaceSize,bubStd);
% 
tGuessSd=0.05; % sd of Gaussian before clipping to specified range
pThreshold=0.75;
beta=3;delta=0.01;gamma=0.5;
q=QuestCreate(tGuess,tGuessSd,pThreshold,beta,delta,gamma);
surface=QuestMean(q);

clear reproducted_masks
% Reproduce the noise for each trial and put it in a matrix
for trial = 1:200
    
    if mod(trial,100)==0
        sprintf('// Trial %d  //',trial)
    end
    
    % Creation de bruit
    qteBulles = cid.data(5,trial);
    [posit,stim]=bubMask_spatial(qteBulles,spaceSize,facemask,bubStd);
    tmp=posit;
    X(trial,:) =tmp(:);%mask_bulles(:);%cid.masks{trial};% tmp(:);
    
    % UPDATE QUEST
    q=QuestUpdate(q, surface, accuracy);surface=QuestMean(q);
    qteBulles=max(round(((surface+minBulle)*spaceSize^2)/surfaceBulle),1);
    
    
    % Variable dependente
    y(1,trial)  = cid.data(9,trial); % ACCURACY
    
    if find(isnan(X(trial,:)))
        toto
        X(trial,:)=zeros(1,sizeX*sizeX);
    end
    
end
% Standardisation de la VD
y       = (y - mean(y)) / std(y);

X_all = [X_all; X;];
y_all = [y_all y];

%On combine les blocs pour chq sujets..
b_all = (y_all) * X_all;
b_2D_all = reshape(b_all, spaceSize,spaceSize);
% Bootstrapping the accuracry vector.

index = randperm(size(y_all,2));
b_boot = (y_all(index)) * X_all;
b_boot_2D_all = reshape(b_boot, spaceSize,spaceSize);

mCi=mean(b_2D_all(:));
ci=SmoothCi(b_2D_all-mCi,sigma)+mCi;

mCi_boot=mean(b_boot_2D_all(:));
ci_boot=SmoothCi(b_boot_2D_all-mCi_boot,sigma)+mCi_boot;

% Standardize sci with sci_boot
SSP = (ci - mean(ci_boot(:))) / std(ci_boot(:));

CI_all{task}(subjectN,block,:,:)=SSP;
end

figure, imagesc(squeeze(sum(CI_all{task}(subjectN,3,:,:),2)/sqrt(nBlocks))), title(sprintf(' subject %s, task %s',name,task_str))

end
%% compute ROI usage, save per participant
% load ROI
mask_file=load('/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/interestregions.mat')

% Link CI and ROIs
masks{1}  = logical(mask_file.mask(:,:,1));
masks{2} = logical(mask_file.mask(:,:,2));
masks{3} = logical(mask_file.mask(:,:,3));
masks{4} = ~(masks{1}+masks{2}+masks{3});

if task==1
    path_data='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/emotion/raw_data/';
    res_path='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/emotion/emotion_CIs';
else
    path_data='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/gender/raw_data/';
    res_path='/home/adf/faghelss/Documents/project_FrequencyTaggingBubbles/behavior/gender/gender_CIs';
end
subjectN=0;
clear all_meanROI_usage all_maxROI_usage
for subject=1:nSubs
    subjectN=subjectN+1;
    
    name=info_parts{subject}{1};
    filename = sprintf('CI_%s_%s', name,task_str);
    
    CIs_sub=squeeze(sum(CI_all{task}(subject,:,:,:),2))/sqrt(nBlocks);
    clear cid q
    % Calculate de mean and max
    mean_ROIs = [nanmean(CIs_sub(masks{1})), nanmean(CIs_sub(masks{2})), nanmean(CIs_sub(masks{3}))];
    max_ROIs = [max(CIs_sub(masks{1})), max(CIs_sub(masks{2})), max(CIs_sub(masks{3}))];
    
    save(fullfile(res_path,filename), 'CIs_sub', 'mean_ROIs', 'max_ROIs','masks')%,'mACC','mRT');
end
show_ci=squeeze(sum(sum(CI_all{task},2)))/sqrt(nBlocks*subjectN);

figure, imagesc(show_ci.*(masks{1}+masks{2}+masks{3})),colormap(jet)

%%

subjectN=0;
clear all_meanROI_usage all_maxROI_usage
for subject=1:nSubs
    subjectN=subjectN+1;
    
    name=info_parts{subject}{1};
    filename = sprintf('CI_%s_%s', name,task_str);
    load (fullfile(res_path,filename), 'CIs_sub', 'mean_ROIs', 'max_ROIs','masks')
    
    all_meanROI_usage{task}(subjectN,:)=mean_ROIs;all_maxROI_usage{task}(subjectN,:)=max_ROIs;
    
end
figure, scatter3(all_meanROI_usage{1}(:,1),all_meanROI_usage{1}(:,2),all_meanROI_usage{1}(:,3))
